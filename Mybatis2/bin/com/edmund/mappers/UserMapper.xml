<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edmund.mappers.UserMapper">
<!-- 1,size表示缓存cache中能容纳的元素个数，默认是1024
	 2，flushInterval 定义刷新频率，以毫秒计
	 3，eviction 定义缓存的移除机制。默认是LRU(last recently used 最近最少使用，还有FIFO 先进先出 )
	 4，readOnly 默认值是false，如果定义为true，缓存只能读,如果readOnly为false，此时要结果集对象是可序列化的。
 -->
<cache size="1024" flushInterval="60000" eviction="LRU" readOnly="false"></cache>
	<resultMap type="User" id="UserResult">
		<id property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="password" column="password"/>
	</resultMap>
	

	<select id="findByMap" parameterType="Map"  resultMap="UserResult" flushCache="false" useCache="true">
		select * from user where gradeId = #{gradeId}
		<if test = "name != null">
			and name like #{name}		 
		 </if>
		 <if test = "password != null">
			and password = #{password}		 
		 </if>
	</select>
	<select id="findByMap2" parameterType="map"  resultMap="UserResult">
		select * from user 
		<choose>
			<when test="searchBy == 'gradeId'">
				where gradeId=#{gradeId}
			</when>
			<when test="searchBy == 'name'">
				where name like #{name}
			</when>
			<otherwise>
				where password=#{password}
			</otherwise>
		</choose>
	</select>
	
	<select id="findByMap3" parameterType="map"  resultMap="UserResult">
		select * from user 
		<where>
			<if test = "name != null">
				name like #{name}		 
			 </if>
			 <if test = "addressId != null">
				and addressId = #{addressId}		 
			 </if>
			 	<if test = "gradeId != null">
				and gradeId= #{gradeId}		 
			 </if>
		 </where>
	</select>
	
<!-- 		<select id="findByMap3" parameterType="map"  resultMap="UserResult">
		select * from user 
		<trim prefix="where" prefixOverrides="and|or">
			<if test = "name != null">
				name like #{name}		 
			 </if>
			 <if test = "addressId != null">
				and addressId = #{addressId}		 
			 </if>
			 	<if test = "gradeId != null">
				and gradeId= #{gradeId}		 
			 </if>
		 </trim>
	</select> -->
		
	<select id="findByMap4" parameterType="map"  resultMap="UserResult">
		select * from user 
		
			<if test = "gradeIds != null">
				<where>
						gradeId in
					<foreach item="gradeId" collection="gradeIds" open="(" separator="," close=")"  >
						#{gradeId}
					</foreach>	 
				</where>
			 </if>
	</select>
	<update id="updateUser" parameterType="User" >
		update user 
		<set>
			<if test="name != null">
				name=#{name},
			</if>
			<if test="password != null">
				password=#{password},
			</if>
		</set>
		where id = #{id}
		
	</update>
	
	
	<insert id="insertUser" parameterType="User">
		insert into User(name,password,pic) values(#{name},#{password},#{pic})
	</insert>
	<select id="findById" parameterType="Integer" resultType="User">
		select * from user where id=#{id}
	</select>
	<select id="findByLimit" parameterType="map"  resultMap="UserResult">
		select * from user
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
</mapper>